{"version":3,"sources":["enums/Filter.ts","features/currentTodo.ts","features/filter.ts","features/todos.ts","app/store.ts","components/TodoList/TodoList.tsx","app/hooks.ts","components/TodoFilter/TodoFilter.tsx","helpers/debounce.ts","components/ModalCard/ModalCard.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["Filter","actions","todo","type","payload","currentTodoReducer","state","action","initialState","query","status","All","filterReducer","todosReducer","todos","rootReducer","combineReducers","currentTodo","filter","store","createStore","composeWithDevTools","applyMiddleware","thunk","TodoList","handleClick","className","map","title","id","completed","userId","classNames","onClick","useAppDispatch","useDispatch","useAppSelector","useSelector","TodoFilter","useState","search","setSearch","dispatch","debounceSearch","f","delay","timeoutId","clearTimeout","setTimeout","debounce","filterActions","onSubmit","event","preventDefault","onChange","e","target","value","Active","Completed","placeholder","style","pointerEvents","ModalCard","user","handleCloseModal","name","email","href","Loader","get","url","fullURL","process","Promise","resolve","then","fetch","res","ok","Error","json","TodoModal","setUser","useEffect","getUser","App","isRequestTodosError","setIsRequestTodosError","isLoading","setIsLoading","setUserId","fetchData","a","data","todosActions","filteredTodos","useMemo","todoList","trim","loweredQuery","toLowerCase","includes","currentTodoActions","length","Root","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bd05f0e4.chunk.js","sourcesContent":["export enum Filter {\n  All = 'all',\n  Active = 'active',\n  Completed = 'completed',\n}\n","import { Todo } from '../types/Todo';\n\ntype RemoveTodoAction = { type: 'currentTodo/REMOVE' };\n\ntype SetTodoAction = {\n  type: 'currentTodo/SET';\n  payload: Todo;\n};\n\nconst removeTodo = (): RemoveTodoAction => ({ type: 'currentTodo/REMOVE' });\n\nconst setTodo = (todo: Todo): SetTodoAction => ({\n  type: 'currentTodo/SET',\n  payload: todo,\n});\n\nexport const actions = { setTodo, removeTodo };\n\ntype State = Todo | null;\ntype Action = SetTodoAction | RemoveTodoAction;\n\nconst currentTodoReducer = (\n  state: State = null,\n  action: Action,\n): State => {\n  switch (action.type) {\n    case 'currentTodo/SET':\n      return { ...action.payload };\n\n    case 'currentTodo/REMOVE':\n      return null;\n\n    default:\n      return state;\n  }\n};\n\nexport default currentTodoReducer;\n","import { Filter } from '../enums/Filter';\n\ntype SetStatusAction = {\n  type: 'filter/SET_STATUS',\n  payload: Filter,\n};\n\ntype QueryAction = {\n  type: 'filter/SET_QUERY',\n  payload: string,\n};\n\ntype ClearAction = {\n  type: 'filter/CLEAR'\n};\n\nconst setStatus = (payload: Filter): SetStatusAction => ({\n  type: 'filter/SET_STATUS',\n  payload,\n});\n\nconst setQuery = (payload: string): QueryAction => ({\n  type: 'filter/SET_QUERY',\n  payload,\n});\n\nconst clear = (): ClearAction => ({ type: 'filter/CLEAR' });\n\nexport const actions = { setStatus, setQuery, clear };\n\ntype State = {\n  query: string;\n  status: Filter;\n};\n\nconst initialState = { query: '', status: Filter.All };\n\ntype Action = SetStatusAction | QueryAction | ClearAction;\n\nconst filterReducer = (state: State = initialState, action: Action) => {\n  switch (action.type) {\n    case 'filter/SET_STATUS':\n      return { ...state, status: action.payload };\n\n    case 'filter/SET_QUERY':\n      return { ...state, query: action.payload };\n\n    case 'filter/CLEAR':\n      return { ...state, query: '' };\n\n    default:\n      return state;\n  }\n};\n\nexport default filterReducer;\n","import { Todo } from '../types/Todo';\n\ntype AddTodos = { type: 'todos/SET', payload: Todos };\n\nconst set = (payload: Todos): AddTodos => ({ type: 'todos/SET', payload });\n\nexport const actions = { set };\n\ntype Todos = Todo[];\ntype Action = AddTodos;\n\nconst todosReducer = (\n  todos: Todos = [],\n  action: Action,\n): Todos => {\n  switch (action.type) {\n    case 'todos/SET':\n      return [...action.payload];\n\n    default:\n      return todos;\n  }\n};\n\nexport default todosReducer;\n","import { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\n\nimport currentTodoReducer from '../features/currentTodo';\nimport filterReducer from '../features/filter';\nimport todosReducer from '../features/todos';\n\nconst rootReducer = combineReducers({\n  currentTodo: currentTodoReducer,\n  filter: filterReducer,\n  todos: todosReducer,\n});\n\nexport const store = createStore(\n  rootReducer,\n  composeWithDevTools(\n    applyMiddleware(thunk),\n  ),\n);\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n","import React from 'react';\nimport classNames from 'classnames';\n\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n  handleClick: (id: number, todo: Todo) => void;\n  currentTodo: Todo | null,\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  handleClick,\n  currentTodo,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map(todo => {\n        const {\n          title,\n          id,\n          completed,\n          userId,\n        } = todo;\n\n        return (\n          <tr\n            data-cy=\"todo\"\n            className={classNames({\n              'has-background-info-light': currentTodo?.id === id,\n            })}\n          >\n            <td className=\"is-vcentered\">{id}</td>\n            <td className=\"is-vcentered\">\n              {completed && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n\n            <td className=\"is-vcentered is-expanded\">\n              <p\n                className={classNames({\n                  'has-text-danger': !completed,\n                  'has-text-success': completed,\n                })}\n              >\n                {title}\n              </p>\n            </td>\n\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => handleClick(userId, todo)}\n              >\n                <span className=\"icon\">\n                  <i\n                    className={classNames('far', {\n                      'fa-eye': currentTodo?.id !== id,\n                      'fa-eye-slash': currentTodo?.id === id,\n                    })}\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        );\n      })}\n    </tbody>\n  </table>\n);\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport { AppDispatch, RootState } from './store';\n\nexport const useAppDispatch: () => AppDispatch = useDispatch;\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import React, { useState } from 'react';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\n\nimport { actions as filterActions } from '../../features/filter';\nimport { Filter } from '../../enums/Filter';\nimport { debounce } from '../../helpers/debounce';\n\nexport const TodoFilter: React.FC = () => {\n  const { status } = useAppSelector(state => state.filter);\n  const [search, setSearch] = useState('');\n  const dispatch = useAppDispatch();\n  const debounceSearch = debounce((query: string) => {\n    dispatch(filterActions.setQuery(query));\n  }, 300);\n\n  const handleSelect = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    dispatch(filterActions.setStatus(e.target.value as Filter));\n  };\n\n  const handleQuery = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setSearch(e.target.value);\n    debounceSearch(e.target.value);\n  };\n\n  const handleClear = () => {\n    dispatch(filterActions.clear());\n    setSearch('');\n  };\n\n  return (\n    <form\n      className=\"field has-addons\"\n      onSubmit={event => event.preventDefault()}\n    >\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={handleSelect}\n            value={status}\n          >\n            <option value={Filter.All}>\n              All\n            </option>\n\n            <option value={Filter.Active}>\n              Active\n            </option>\n\n            <option value={Filter.Completed}>\n              Completed\n            </option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={search}\n          onChange={handleQuery}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {search && (\n            <button\n              aria-label=\"none\"\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={handleClear}\n            />\n          )}\n        </span>\n      </p>\n    </form>\n  );\n};\n","export const debounce = (\n  f: (query: string) => void,\n  delay: number,\n) => {\n  let timeoutId: NodeJS.Timeout;\n\n  return (query: string) => {\n    clearTimeout(timeoutId);\n    timeoutId = setTimeout(() => {\n      f(query);\n    }, delay);\n  };\n};\n","import React from 'react';\n\nimport { User } from '../../types/User';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  user: User;\n  currentTodo: Todo;\n  handleCloseModal: () => void;\n};\n\nexport const ModalCard: React.FC<Props> = ({\n  user,\n  currentTodo,\n  handleCloseModal,\n}) => {\n  const { id, title, completed } = currentTodo;\n  const { name, email } = user;\n\n  return (\n    <div className=\"modal-card\">\n      <header className=\"modal-card-head\">\n        <div\n          className=\"modal-card-title has-text-weight-medium\"\n          data-cy=\"modal-header\"\n        >\n          {`Todo #${id}`}\n        </div>\n\n        <button\n          aria-label=\"none\"\n          type=\"button\"\n          className=\"delete\"\n          data-cy=\"modal-close\"\n          onClick={handleCloseModal}\n        />\n      </header>\n\n      <div className=\"modal-card-body\">\n        <p className=\"block\" data-cy=\"modal-title\">{title}</p>\n\n        <p className=\"block\" data-cy=\"modal-user\">\n\n          { completed ? (\n            <strong className=\"has-text-success\">Done</strong>\n          ) : (\n            <strong className=\"has-text-danger\">Planned</strong>\n          )}\n\n          {' by '}\n          <a href={`mailto:${email}`}>{name}</a>\n        </p>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\nconst BASE_URL = process.env.REACT_APP_BASE_URL;\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  const fullURL = `${BASE_URL}${url}${'.json'}`;\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => {\n      if (!res.ok) {\n        throw new Error();\n      }\n\n      return res.json();\n    });\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport { useAppSelector } from '../../app/hooks';\n\nimport { ModalCard } from '../ModalCard';\nimport { Loader } from '../Loader';\n\nimport { getUser } from '../../api';\nimport { User } from '../../types/User';\n\ntype Props = {\n  userId: number;\n  handleCloseModal: () => void;\n};\n\nexport const TodoModal: React.FC<Props> = ({ userId, handleCloseModal }) => {\n  const currentTodo = useAppSelector(state => state.currentTodo);\n  const [user, setUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    getUser(userId)\n      .then((res) => setUser(res));\n  }, [userId]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {user && currentTodo ? (\n        <ModalCard\n          user={user}\n          currentTodo={currentTodo}\n          handleCloseModal={handleCloseModal}\n        />\n      ) : (\n        <Loader />\n      )}\n    </div>\n  );\n};\n","import React, { useEffect, useMemo, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\n\nimport { Todo } from './types/Todo';\nimport { getTodos } from './api';\nimport { useAppDispatch, useAppSelector } from './app/hooks';\nimport { actions as todosActions } from './features/todos';\nimport { actions as currentTodoActions } from './features/currentTodo';\nimport { Filter } from './enums/Filter';\n\nexport const App: React.FC = () => {\n  const [isRequestTodosError, setIsRequestTodosError] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [userId, setUserId] = useState(0);\n  const todos = useAppSelector(state => state.todos);\n  const { status, query } = useAppSelector(state => state.filter);\n  const currentTodo = useAppSelector(state => state.currentTodo);\n  const dispatch = useAppDispatch();\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    const fetchData = async () => {\n      try {\n        const data: Todo[] = await getTodos();\n\n        dispatch(todosActions.set(data));\n      } catch (err) {\n        setIsRequestTodosError(true);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  const filteredTodos = useMemo(() => {\n    let todoList = [...todos];\n\n    todoList = todoList.filter(todo => {\n      switch (status) {\n        case Filter.Completed:\n          return todo.completed;\n\n        case Filter.Active:\n          return !todo.completed;\n\n        default:\n          return todo;\n      }\n    });\n\n    if (query.trim()) {\n      const loweredQuery = query.trim().toLowerCase();\n\n      todoList = todoList.filter(todo => (\n        todo.title.toLowerCase().includes(loweredQuery)\n      ));\n    }\n\n    return todoList;\n  }, [todos, status, query]);\n\n  const handleClick = (id: number, todo: Todo) => {\n    setUserId(id);\n    dispatch(currentTodoActions.setTodo(todo));\n  };\n\n  const handleCloseModal = () => {\n    setUserId(0);\n    dispatch(currentTodoActions.removeTodo());\n  };\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter />\n            </div>\n\n            {isLoading ? (\n              <Loader />\n            ) : (\n              <div className=\"block\">\n                <TodoList\n                  todos={filteredTodos}\n                  handleClick={handleClick}\n                  currentTodo={currentTodo}\n                />\n              </div>\n            )}\n\n            {isRequestTodosError && (\n              <p className=\"notification is-warning\">\n                There are no todos on server\n              </p>\n            )}\n\n            {!filteredTodos.length && query && (\n              <p className=\"notification is-warning\">\n                There are no todos matching current filter criteria\n              </p>\n            )}\n          </div>\n        </div>\n      </div>\n\n      {currentTodo && (\n        <TodoModal\n          userId={userId}\n          handleCloseModal={handleCloseModal}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport { store } from './app/store';\nimport { App } from './App';\n\nconst Root = () => (\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>\n);\n\nReactDOM.render(<Root />, document.getElementById('root'));\n"],"sourceRoot":""}